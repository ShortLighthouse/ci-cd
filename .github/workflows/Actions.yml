name: CICD Actions

on: create

env:
  INTEGRATION_FLOW_ID: New_Flow2
  VERSION: " "
  CLIENT_ID_SECRET_BASE_64: ${{ secrets.CLIENT_ID_SECRET_BASE_64 }}
  CI_COMMIT_MESSAGE: Add Integration Flow Build Artifacts
  CI_COMMIT_AUTHOR: Continuous Integration
  CI_COMMIT_EMAIL: donotreply@thevoid.com 

jobs:
  get-integration-flow-runtime:
    runs-on: ubuntu-latest
    steps:
      - name: Get version of Integration Flow deployed
        id: integration_flow_version
        run: |
         URL_RESPONSE=$(curl --ssl-no-revoke -X GET \
          https://b574385atrial.it-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/IntegrationRuntimeArtifacts/LatestVersion -H "Authorization: Basic c2ItZDEyOGRmNWMtYjFmZS00MTZmLTljNmYtYzJhOGE4MGUxYmE1IWI5NTQ4fGl0LXJ0LWI1NzQzODVhdHJpYWwhYjE5NjoyYzYwMmViZC0zZGU1LTQ4NmYtYjE4YS04ZWFiM2ZhMWFhZDgkcjNjVWdZS25PMHMwYS1Kb2pUQk1pXzdtbUVNVFZlVDg0YjhDT1dNbzQzMD0=" \
          -H "id: Query_Public_GitHub_Repositories") >> $GITHUB_ENV

          VERSION=$(jq '.entry.properties.Version' <(echo "${URL_RESPONSE}"))

          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Show Version Retrieved
        run: 'echo "Version: ${{ env.version }}"'

      - name: Checkout
        uses: actions/checkout@v3

      - name: List Files After Checkout
        run: |
          pwd
          ls

#      - name: Create and Verify New Tag with Integration Flow Version Number
#        run: |
#          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
#          git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
#          git tag -a ${{ env.version }} -m "SAP CPI Integration Flow Version"

      - name: Display secret CLIENT_ID_SECRET_BASE_64
        run: |
          echo "$CLIENT_ID_SECRET_BASE_64"
          echo "Environment variable: "
          echo "${{ env.CLIENT_ID_SECRET_BASE_64 }}"


      - name: Get Zipped Contents of Integration Flow in Base64 Encoded String
        run: |
          ZIPPED_CONTENTS=$(curl --ssl-no-revoke -X GET \
          https://b574385atrial.it-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/IntegrationRuntimeArtifacts/ZippedContent -H "Authorization: Basic ${{ env.CLIENT_ID_SECRET_BASE_64 }}" \
          -H "id: Query_Public_GitHub_Repositories")

          echo "Base 64 Representation of Zip File:"

          echo $ZIPPED_CONTENTS

          echo 'BASE64_STRING<<EOF' >> $GITHUB_ENV
          echo $ZIPPED_CONTENTS >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Base64 Decode to Zip File
        uses: kitek/decode-base64-into-file-action@1.0
        with:
          encoded-value: ${{ env.BASE64_STRING }}
          destination-file: integration_flow.zip


      - name: List Files And Their Sizes After Checkout
        run: |
          pwd
          ls -l
          
      - name: Unzip the Zip File
        run: 7z e integration_flow.zip -spf -aoa

      - name: List Files After Unzip
        run: |
          pwd
          ls

      - name: Delete zip File
        run: rm integration_flow.zip

      - name: List Files After zip Deletion
        run: |
          pwd
          ls

      - name: GIT commit and push to Remote
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git add -A
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push --tags







   

          